<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="RECORD 05-30-18 12.36.52 PM" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.1.1.312. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.62 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">stage.bklinkglobal.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">frameworks.hs.llnwd.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">sisense-rbi-stage.alchemy-eng.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">ec.walkme.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="gaussianTimerDeviation" elementType="Argument">
            <stringProp name="Argument.name">gaussianTimerDeviation</stringProp>
            <stringProp name="Argument.value">40000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="gaussianTimerDelay" elementType="Argument">
            <stringProp name="Argument.name">gaussianTimerDelay</stringProp>
            <stringProp name="Argument.value">25000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.clearEachIteration">true</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
        <collectionProp name="CookieManager.cookies">
          <elementProp name="JSESSIONID" elementType="Cookie" testname="JSESSIONID">
            <stringProp name="Cookie.value">&quot;n8Un9 Ux28NSyN u1UU7hsbz.hc03-rbi01stage-dfw.alchemy-ops.com:hc03-C1&quot;</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="io" elementType="Cookie" testname="io">
            <stringProp name="Cookie.value">JbS6LEEQ3FQe86_KAAHw</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name=".prism_anonymous" elementType="Cookie" testname=".prism_anonymous">
            <stringProp name="Cookie.value">f6f30142-24ff-4a39-b595-208543075034</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name=".ASPXANONYMOUS" elementType="Cookie" testname=".ASPXANONYMOUS">
            <stringProp name="Cookie.value">G7d8c80y1AEkAAAAZTJmZGFlNDItNzY5NC00YWM2LTgxOTUtYzU0ODQ4MGVjYTE07ecX81lmMj-rsL0ZY2veXuTI_8o1</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name=".prism" elementType="Cookie" testname=".prism">
            <stringProp name="Cookie.value">{&quot;name&quot;:&quot;.prism&quot;,&quot;token&quot;:&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiNWIwYzBjOTY0OGVkODkxNGE0OGJiYzhkIiwiZGV2aWNlU2VjcmV0IjoiNDk1ZmVjMGMtY2FkMy1jNDE0LWE0ZjEtMTMzNGZmZTE4YzcyIiwiZGV2aWNlSWQiOiJkYjI4Zjk0MC02ODJlLTExZTgtYjMxYy0wMzBkZDRhZTMzNmYiLCJpYXQiOjE1MjgxNDExMDh9.wBjdXh54zeRBVxo_GON4BFrTcG9sXKQqThypOZ_SOqA&quot;,&quot;deviceId&quot;:&quot;db28f940-682e-11e8-b31c-030dd4ae336f&quot;,&quot;isPersistent&quot;:false,&quot;expiration&quot;:&quot;2018-06-11T19:38:28.963Z&quot;,&quot;issueDate&quot;:&quot;2018-06-04T19:38:28.963Z&quot;}</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
        </collectionProp>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <stringProp name="CookieManager.policy">standard-strict</stringProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1363247040000</longProp>
        <longProp name="ThreadGroup.end_time">1363247040000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">siSense_Users.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">userName</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/v1/authentication/tryLogin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">Password@1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="localeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">localeId</stringProp>
                  <stringProp name="Argument.value">en-CA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/authentication/tryLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/v1/authentication/login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">Password@1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="localeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">localeId</stringProp>
                  <stringProp name="Argument.value">en-CA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/authentication/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="X-Device-Id" elementType="Header">
                  <stringProp name="Header.name">X-Device-Id</stringProp>
                  <stringProp name="Header.value">bffa5c76-4e72-b2a8-ac36-fdc72bcd05c5</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">214</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract access token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">accessToken</stringProp>
              <stringProp name="RegexExtractor.regex">access_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/app/main#/home" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">Password@1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPersistent" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isPersistent</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="deviceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">deviceId</stringProp>
                  <stringProp name="Argument.value">bffa5c76-4e72-b2a8-ac36-fdc72bcd05c5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">${accessToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${userName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">app/main#/home</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">266</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/v1/settings/public_settings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/settings/public_settings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2691</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/users/loggedIn" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/users/loggedIn</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">4</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/v1/settings/system" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/settings/system</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">4</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
            <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OPS COMPANY LOG COMPLETION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Company DagLevel" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aDagLevels&quot;,&quot;fullname&quot;:&quot;LocalHost/DagLevels&quot;,&quot;id&quot;:&quot;aLOCALHOST_aDAGLEVELS&quot;,&quot;title&quot;:&quot;DagLevels&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dag_id_parent]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;dag_id_parent&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.startlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;startlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.endlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;endlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dagtype]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;dagtype&quot;}}],&quot;ungroup&quot;:true,&quot;count&quot;:3,&quot;offset&quot;:0,&quot;isMaskedResult&quot;:false,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5a7b4a7dffbeb52094ab4856;&quot;,&quot;dashboard&quot;:&quot;5a7b4a54ffbeb52094ab4843;DagLevels&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/DagLevels/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Company Log Required" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[04876-EA8]&quot;,&quot;context&quot;:{&quot;[B1ED8-DD0]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[04876-EA8]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Required&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071CE&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;disabled&quot;:false,&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8e90508c5e619b0416ae7;&quot;,&quot;dashboard&quot;:&quot;5ac8e90508c5e619b0416ae6;LogCompanyOps&quot;,&quot;queryGuid&quot;:&quot;A254F-9EC1-4DFC-D6D9-E44C-42BD-9357-6DEC-0&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsReqData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsReqData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
	//FailureMessage = &quot;Logs Required are not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Required are not loading. Expected: should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Requireds= &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Company Log Completion Rate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6EAB5-9B9]/[78002-088]&quot;,&quot;context&quot;:{&quot;[5C422-812]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique routine_task_id&quot;},&quot;[78002-088]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of routine_task_id&quot;},&quot;[6EAB5-9B9]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Completion Rate&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;disabled&quot;:false,&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8e90508c5e619b0416ae9;&quot;,&quot;dashboard&quot;:&quot;5ac8e90508c5e619b0416ae6;LogCompanyOps&quot;,&quot;queryGuid&quot;:&quot;37F86-AAE8-76D7-B46B-B212-00B1-0BF0-9145-9&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletionRateData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletionRateData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
	//FailureMessage = &quot;Logs Completion Rate Data are not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Completion Rate Data are not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Completion Rate Data= &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Company Log Completed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[B023A-48A]&quot;,&quot;context&quot;:{&quot;[D3167-880]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_completed&quot;},&quot;[B023A-48A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;disabled&quot;:false,&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8e90508c5e619b0416ae8;&quot;,&quot;dashboard&quot;:&quot;5ac8e90508c5e619b0416ae6;LogCompanyOps&quot;,&quot;queryGuid&quot;:&quot;AC925-673A-659F-D78B-EF92-D861-E5FB-620A-C&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletedData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletedData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
	//FailureMessage = &quot;Logs Completed Data are not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Completed Data are not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Completed Data= &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Company Log Detailed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Company&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;index&quot;:0},&quot;hierarchies&quot;:[&quot;5aa530a4dd0cac320402e323&quot;],&quot;activeHierarchy&quot;:{&quot;_id&quot;:&quot;5acbbb8d4110e124a4852a8b&quot;,&quot;title&quot;:&quot;Company&quot;},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[BBB46-855]&quot;,&quot;context&quot;:{&quot;[BBB46-855]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;},&quot;[29DD4-F4A]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[BBB46-855]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;context&quot;:{&quot;[A4C75-F7A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Required&quot;}},&quot;title&quot;:&quot;Required Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([5C970-0BA])&quot;,&quot;context&quot;:{&quot;[5C970-0BA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:110},&quot;field&quot;:{&quot;id&quot;:&quot;sum([5C970-0BA])&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;context&quot;:{&quot;[415DE-424]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[D30FE-F3E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;},&quot;[C1A57-7B2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([621F1-303])&quot;,&quot;context&quot;:{&quot;[621F1-303]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Auto Completed&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:105},&quot;field&quot;:{&quot;id&quot;:&quot;sum([621F1-303])&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;context&quot;:{&quot;[1C61F-225]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[2FEEF-4B4]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_auto_completed&quot;},&quot;[189F8-2AA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:104},&quot;field&quot;:{&quot;id&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;index&quot;:6},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;count([28BB7-102])&quot;,&quot;context&quot;:{&quot;[28BB7-102]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log In Progress&quot;}},&quot;title&quot;:&quot;Partially Completed Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:103},&quot;field&quot;:{&quot;id&quot;:&quot;count([28BB7-102])&quot;,&quot;index&quot;:7},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;context&quot;:{&quot;[A446B-E84]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[36C41-CA3]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_in_progress&quot;},&quot;[E307E-7F5]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Partially Completed Logs %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:108},&quot;field&quot;:{&quot;id&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;index&quot;:8},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[AD9F2-DAC]&quot;,&quot;context&quot;:{&quot;[AD9F2-DAC]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(sum([F632A-161]),[0318F-92E])&quot;,&quot;context&quot;:{&quot;[0318F-92E]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.MIT&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[F632A-161]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:114},&quot;field&quot;:{&quot;id&quot;:&quot;[AD9F2-DAC]&quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FC80-154]&quot;,&quot;context&quot;:{&quot;[2FC80-154]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([EA89C-AB2]),[E7622-E90])&quot;,&quot;context&quot;:{&quot;[E7622-E90]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.SHIFT_LDR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[EA89C-AB2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:107},&quot;field&quot;:{&quot;id&quot;:&quot;[2FC80-154]&quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[1B57B-335]&quot;,&quot;context&quot;:{&quot;[1B57B-335]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([9F3A5-89E]),[7BDF5-73A])&quot;,&quot;context&quot;:{&quot;[7BDF5-73A]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.ASSISTANT_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[9F3A5-89E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:120},&quot;field&quot;:{&quot;id&quot;:&quot;[1B57B-335]&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[E859A-C42]&quot;,&quot;context&quot;:{&quot;[E859A-C42]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([55792-84F]),[D291C-2AD])&quot;,&quot;context&quot;:{&quot;[D291C-2AD]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.REST_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[55792-84F]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;[E859A-C42]&quot;,&quot;index&quot;:12},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[668B1-B57]&quot;,&quot;context&quot;:{&quot;[668B1-B57]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([656B0-64B]),[CE17D-9F0])&quot;,&quot;context&quot;:{&quot;[CE17D-9F0]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;and&quot;:[{&quot;doesntEqual&quot;:&quot;LookRole.name.ROOT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSOCIATE&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSISTANT_MGR&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.MIT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.REST_MGR&quot;}]},&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[656B0-64B]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[668B1-B57]&quot;,&quot;index&quot;:13},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Log Type &quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Log Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;Company&quot;},&quot;disabled&quot;:false,&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8e90508c5e619b0416aed;&quot;,&quot;dashboard&quot;:&quot;5ac8e90508c5e619b0416ae6;LogCompanyOps&quot;,&quot;queryGuid&quot;:&quot;E46BC-2238-EE9D-DC88-4572-676E-08AE-0079-8&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="OPS LOG COMPLETION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Log Completion DagLevel" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aDagLevels&quot;,&quot;fullname&quot;:&quot;LocalHost/DagLevels&quot;,&quot;id&quot;:&quot;aLOCALHOST_aDAGLEVELS&quot;,&quot;title&quot;:&quot;DagLevels&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dag_id_parent]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;dag_id_parent&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.startlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;startlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.endlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;endlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dagtype]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;dagtype&quot;}}],&quot;ungroup&quot;:true,&quot;count&quot;:3,&quot;offset&quot;:0,&quot;isMaskedResult&quot;:false,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5a7b4a7dffbeb52094ab4856;&quot;,&quot;dashboard&quot;:&quot;5a7b4a54ffbeb52094ab4843;DagLevels&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/DagLevels/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Log Logs Required" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[04876-EA8]&quot;,&quot;context&quot;:{&quot;[B1ED8-DD0]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[04876-EA8]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Required&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071CE&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8ea6508c5e619b0416ba2;&quot;,&quot;dashboard&quot;:&quot;5ac8ea6508c5e619b0416ba1;LogFranchiseOps&quot;,&quot;queryGuid&quot;:&quot;82D9D-33DA-142B-3E39-2ACB-0E80-E930-39B8-2&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsReqData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsReqData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Logs Required are not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs are Required are not loading. Expected: should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Requireds= &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Log Logs Completed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[B023A-48A]&quot;,&quot;context&quot;:{&quot;[D3167-880]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_completed&quot;},&quot;[B023A-48A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8ea6508c5e619b0416ba3;&quot;,&quot;dashboard&quot;:&quot;5ac8ea6508c5e619b0416ba1;LogFranchiseOps&quot;,&quot;queryGuid&quot;:&quot;3FAF0-9223-CFD9-F00A-C15E-D491-4B46-F722-8&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletedData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletedData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
	//FailureMessage = &quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Completed Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Log Completion Rate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6EAB5-9B9]/[78002-088]&quot;,&quot;context&quot;:{&quot;[5C422-812]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique routine_task_id&quot;},&quot;[78002-088]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of routine_task_id&quot;},&quot;[6EAB5-9B9]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Completion Rate&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8ea6508c5e619b0416ba4;&quot;,&quot;dashboard&quot;:&quot;5ac8ea6508c5e619b0416ba1;LogFranchiseOps&quot;,&quot;queryGuid&quot;:&quot;9A984-5CFC-28DC-6FEB-B72D-89AD-2B26-DA32-5&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletionRateData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletedData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Completion Rate Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OPS Log Log Detailed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Franchises&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;index&quot;:0},&quot;activeHierarchy&quot;:{&quot;_id&quot;:&quot;5ad0c103ac049b4290cdf1cf&quot;,&quot;title&quot;:&quot;Franchises&quot;},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[BBB46-855]&quot;,&quot;context&quot;:{&quot;[BBB46-855]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;},&quot;[29DD4-F4A]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[BBB46-855]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;context&quot;:{&quot;[A4C75-F7A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Required&quot;}},&quot;title&quot;:&quot;Required Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([5C970-0BA])&quot;,&quot;context&quot;:{&quot;[5C970-0BA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:110},&quot;field&quot;:{&quot;id&quot;:&quot;sum([5C970-0BA])&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;context&quot;:{&quot;[415DE-424]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[D30FE-F3E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;},&quot;[C1A57-7B2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([621F1-303])&quot;,&quot;context&quot;:{&quot;[621F1-303]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Auto Completed&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:105},&quot;field&quot;:{&quot;id&quot;:&quot;sum([621F1-303])&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;context&quot;:{&quot;[1C61F-225]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[2FEEF-4B4]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_auto_completed&quot;},&quot;[189F8-2AA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:104},&quot;field&quot;:{&quot;id&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;index&quot;:6},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;count([28BB7-102])&quot;,&quot;context&quot;:{&quot;[28BB7-102]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log In Progress&quot;}},&quot;title&quot;:&quot;Partially Completed Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:103},&quot;field&quot;:{&quot;id&quot;:&quot;count([28BB7-102])&quot;,&quot;index&quot;:7},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;context&quot;:{&quot;[A446B-E84]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[36C41-CA3]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_in_progress&quot;},&quot;[E307E-7F5]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Partially Completed Logs %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:108},&quot;field&quot;:{&quot;id&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;index&quot;:8},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[AD9F2-DAC]&quot;,&quot;context&quot;:{&quot;[AD9F2-DAC]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(sum([F632A-161]),[0318F-92E])&quot;,&quot;context&quot;:{&quot;[0318F-92E]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.MIT&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[F632A-161]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:114},&quot;field&quot;:{&quot;id&quot;:&quot;[AD9F2-DAC]&quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FC80-154]&quot;,&quot;context&quot;:{&quot;[2FC80-154]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([EA89C-AB2]),[E7622-E90])&quot;,&quot;context&quot;:{&quot;[E7622-E90]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.SHIFT_LDR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[EA89C-AB2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:107},&quot;field&quot;:{&quot;id&quot;:&quot;[2FC80-154]&quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[1B57B-335]&quot;,&quot;context&quot;:{&quot;[1B57B-335]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([9F3A5-89E]),[7BDF5-73A])&quot;,&quot;context&quot;:{&quot;[7BDF5-73A]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.ASSISTANT_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[9F3A5-89E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:120},&quot;field&quot;:{&quot;id&quot;:&quot;[1B57B-335]&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[E859A-C42]&quot;,&quot;context&quot;:{&quot;[E859A-C42]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([55792-84F]),[D291C-2AD])&quot;,&quot;context&quot;:{&quot;[D291C-2AD]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.REST_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[55792-84F]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;[E859A-C42]&quot;,&quot;index&quot;:12},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[668B1-B57]&quot;,&quot;context&quot;:{&quot;[668B1-B57]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([656B0-64B]),[CE17D-9F0])&quot;,&quot;context&quot;:{&quot;[CE17D-9F0]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;and&quot;:[{&quot;doesntEqual&quot;:&quot;LookRole.name.ROOT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSOCIATE&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSISTANT_MGR&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.MIT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.REST_MGR&quot;}]},&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[656B0-64B]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[668B1-B57]&quot;,&quot;index&quot;:13},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Log Type &quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Log Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;Franchises&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8ea6508c5e619b0416ba8;&quot;,&quot;dashboard&quot;:&quot;5ac8ea6508c5e619b0416ba1;LogFranchiseOps&quot;,&quot;queryGuid&quot;:&quot;5CA22-122D-BF81-23DA-D310-D5C9-467F-0339-0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="COMPANY LOG COMPLETION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Log DagLevel" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aDagLevels&quot;,&quot;fullname&quot;:&quot;LocalHost/DagLevels&quot;,&quot;id&quot;:&quot;aLOCALHOST_aDAGLEVELS&quot;,&quot;title&quot;:&quot;DagLevels&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dag_id_parent]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;dag_id_parent&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.startlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;startlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.endlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;endlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dagtype]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;dagtype&quot;}}],&quot;ungroup&quot;:true,&quot;count&quot;:3,&quot;offset&quot;:0,&quot;isMaskedResult&quot;:false,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5a7b4a7dffbeb52094ab4856;&quot;,&quot;dashboard&quot;:&quot;5a7b4a54ffbeb52094ab4843;DagLevels&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/DagLevels/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Log - Logs Required" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[04876-EA8]&quot;,&quot;context&quot;:{&quot;[B1ED8-DD0]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[04876-EA8]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Required&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071CE&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;disabled&quot;:false,&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5abbbcc0f8884e1d74a9fe4a;&quot;,&quot;dashboard&quot;:&quot;5abbbcc0f8884e1d74a9fe49;LogCompany&quot;,&quot;queryGuid&quot;:&quot;48724-52FA-49FA-9FFA-9247-7367-E506-90B2-8&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsRequiredData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsRequiredData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
//	FailureMessage = &quot;Logs Required Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Required Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Required Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Log - Logs Completed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[B023A-48A]&quot;,&quot;context&quot;:{&quot;[D3167-880]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_completed&quot;},&quot;[B023A-48A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;disabled&quot;:false,&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5abbbcc0f8884e1d74a9fe4b;&quot;,&quot;dashboard&quot;:&quot;5abbbcc0f8884e1d74a9fe49;LogCompany&quot;,&quot;queryGuid&quot;:&quot;BC123-9DB7-0527-3218-8FF8-90A5-5279-3703-B&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletedData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletedData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
	//FailureMessage = &quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay);	
}

log.info(&quot;Logs Completed Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Log - Log Detailed 2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Company&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;index&quot;:0},&quot;activeHierarchy&quot;:{&quot;_id&quot;:&quot;5a831061cc16d5178c8a90ab&quot;,&quot;title&quot;:&quot;level6_comp&quot;},&quot;hierarchies&quot;:[],&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[16886-8D9]&quot;,&quot;context&quot;:{&quot;[16886-8D9]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[16886-8D9]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6BB6E-BE1]&quot;,&quot;context&quot;:{&quot;[AF1DA-EB2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.temp_in_range]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique temp_in_range&quot;},&quot;[6BB6E-BE1]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.temp_in_range]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total temp_in_range&quot;}},&quot;title&quot;:&quot;Number of Completed Temperatures that meet the standard&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:217},&quot;field&quot;:{&quot;id&quot;:&quot;[6BB6E-BE1]&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[576A3-C79]&quot;,&quot;context&quot;:{&quot;[CB796-5C6]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.temp_out_range]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique temp_out_range&quot;},&quot;[576A3-C79]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.temp_out_range]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total temp_out_range&quot;}},&quot;title&quot;:&quot;Number of Completed Temperatures that are off standard&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:205},&quot;field&quot;:{&quot;id&quot;:&quot;[576A3-C79]&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([38FDC-252])&quot;,&quot;context&quot;:{&quot;[38FDC-252]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.action_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Action Required&quot;}},&quot;title&quot;:&quot;Number of Action Plans Created&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:106},&quot;field&quot;:{&quot;id&quot;:&quot;sum([38FDC-252])&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Log Type &quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Log Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;Company&quot;},&quot;disabled&quot;:false,&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5abbbcc0f8884e1d74a9fe4e;&quot;,&quot;dashboard&quot;:&quot;5abbbcc0f8884e1d74a9fe49;LogCompany&quot;,&quot;queryGuid&quot;:&quot;16353-5297-6FC2-703A-7879-A66A-4CEF-079D-7&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Log - Log Detailed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Company&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;index&quot;:0},&quot;hierarchies&quot;:[&quot;5aa530a4dd0cac320402e323&quot;],&quot;activeHierarchy&quot;:{&quot;_id&quot;:&quot;5acbbb8d4110e124a4852a8b&quot;,&quot;title&quot;:&quot;Company&quot;},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[BBB46-855]&quot;,&quot;context&quot;:{&quot;[BBB46-855]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;},&quot;[29DD4-F4A]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[BBB46-855]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;context&quot;:{&quot;[A4C75-F7A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Required&quot;}},&quot;title&quot;:&quot;Required Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([5C970-0BA])&quot;,&quot;context&quot;:{&quot;[5C970-0BA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:110},&quot;field&quot;:{&quot;id&quot;:&quot;sum([5C970-0BA])&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;context&quot;:{&quot;[415DE-424]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[D30FE-F3E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;},&quot;[C1A57-7B2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([621F1-303])&quot;,&quot;context&quot;:{&quot;[621F1-303]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Auto Completed&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:105},&quot;field&quot;:{&quot;id&quot;:&quot;sum([621F1-303])&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;context&quot;:{&quot;[1C61F-225]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[2FEEF-4B4]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_auto_completed&quot;},&quot;[189F8-2AA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:104},&quot;field&quot;:{&quot;id&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;index&quot;:6},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;count([28BB7-102])&quot;,&quot;context&quot;:{&quot;[28BB7-102]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log In Progress&quot;}},&quot;title&quot;:&quot;Partially Completed Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:103},&quot;field&quot;:{&quot;id&quot;:&quot;count([28BB7-102])&quot;,&quot;index&quot;:7},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;context&quot;:{&quot;[A446B-E84]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[36C41-CA3]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_in_progress&quot;},&quot;[E307E-7F5]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Partially Completed Logs %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:108},&quot;field&quot;:{&quot;id&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;index&quot;:8},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[AD9F2-DAC]&quot;,&quot;context&quot;:{&quot;[AD9F2-DAC]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(sum([F632A-161]),[0318F-92E])&quot;,&quot;context&quot;:{&quot;[0318F-92E]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.MIT&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[F632A-161]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:114},&quot;field&quot;:{&quot;id&quot;:&quot;[AD9F2-DAC]&quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FC80-154]&quot;,&quot;context&quot;:{&quot;[2FC80-154]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([EA89C-AB2]),[E7622-E90])&quot;,&quot;context&quot;:{&quot;[E7622-E90]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.SHIFT_LDR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[EA89C-AB2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:107},&quot;field&quot;:{&quot;id&quot;:&quot;[2FC80-154]&quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[1B57B-335]&quot;,&quot;context&quot;:{&quot;[1B57B-335]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([9F3A5-89E]),[7BDF5-73A])&quot;,&quot;context&quot;:{&quot;[7BDF5-73A]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.ASSISTANT_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[9F3A5-89E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:120},&quot;field&quot;:{&quot;id&quot;:&quot;[1B57B-335]&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[E859A-C42]&quot;,&quot;context&quot;:{&quot;[E859A-C42]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([55792-84F]),[D291C-2AD])&quot;,&quot;context&quot;:{&quot;[D291C-2AD]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.REST_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[55792-84F]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;[E859A-C42]&quot;,&quot;index&quot;:12},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[668B1-B57]&quot;,&quot;context&quot;:{&quot;[668B1-B57]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([656B0-64B]),[CE17D-9F0])&quot;,&quot;context&quot;:{&quot;[CE17D-9F0]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;and&quot;:[{&quot;doesntEqual&quot;:&quot;LookRole.name.ROOT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSOCIATE&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSISTANT_MGR&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.MIT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.REST_MGR&quot;}]},&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[656B0-64B]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[668B1-B57]&quot;,&quot;index&quot;:13},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Log Type &quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Log Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;Company&quot;},&quot;disabled&quot;:false,&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5abbbcc0f8884e1d74a9fe51;&quot;,&quot;dashboard&quot;:&quot;5abbbcc0f8884e1d74a9fe49;LogCompany&quot;,&quot;queryGuid&quot;:&quot;EE6B2-2C79-27E4-329B-4FAE-C1F1-B6E4-C7CC-3&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Log - Completion Rate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6EAB5-9B9]/[78002-088]&quot;,&quot;context&quot;:{&quot;[5C422-812]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique routine_task_id&quot;},&quot;[78002-088]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of routine_task_id&quot;},&quot;[6EAB5-9B9]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Completion Rate&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;disabled&quot;:false,&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5abbbcc0f8884e1d74a9fe4c;&quot;,&quot;dashboard&quot;:&quot;5abbbcc0f8884e1d74a9fe49;LogCompany&quot;,&quot;queryGuid&quot;:&quot;1974A-4BEC-43F1-F8C8-924B-B56F-4AE1-E267-6&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletionRateData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletionRateData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Logs Completion Rate Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Required Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Completion Rate Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CORPORATE LOG COMPLETION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Log DagLevel" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aDagLevels&quot;,&quot;fullname&quot;:&quot;LocalHost/DagLevels&quot;,&quot;id&quot;:&quot;aLOCALHOST_aDAGLEVELS&quot;,&quot;title&quot;:&quot;DagLevels&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dag_id_parent]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;dag_id_parent&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.startlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;startlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.endlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;endlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dagtype]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;dagtype&quot;}}],&quot;ungroup&quot;:true,&quot;count&quot;:3,&quot;offset&quot;:0,&quot;isMaskedResult&quot;:false,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5a7b4a7dffbeb52094ab4856;&quot;,&quot;dashboard&quot;:&quot;5a7b4a54ffbeb52094ab4843;DagLevels&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/DagLevels/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/activities" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;action&quot;:&quot;dashboardload&quot;,&quot;resourceId&quot;:&quot;dashboard;5ac8e94b08c5e619b0416b12;6&quot;,&quot;device&quot;:&quot;desktop&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/activities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">4</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Log - Log Required" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[04876-EA8]&quot;,&quot;context&quot;:{&quot;[B1ED8-DD0]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[04876-EA8]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Required&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071CE&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;level4&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8e94b08c5e619b0416b13;&quot;,&quot;dashboard&quot;:&quot;5ac8e94b08c5e619b0416b12;LogCorporate&quot;,&quot;queryGuid&quot;:&quot;942E3-CF77-3D3D-9BAB-1887-642D-1D60-E594-E&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsRequiredData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsRequiredData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
//	FailureMessage = &quot;Logs Required Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Required Data is not loading. Expected: Should not be null &quot; + userNameDisplay);	
}

log.info(&quot;Logs Required Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Log - Log Completed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[B023A-48A]&quot;,&quot;context&quot;:{&quot;[D3167-880]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_completed&quot;},&quot;[B023A-48A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;level4&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8e94b08c5e619b0416b14;&quot;,&quot;dashboard&quot;:&quot;5ac8e94b08c5e619b0416b12;LogCorporate&quot;,&quot;queryGuid&quot;:&quot;E856D-BEDA-060C-922B-1355-DBB9-9980-7E5F-D&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletedData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletedData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
//	FailureMessage = &quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Completed Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Log - Log Completion Rate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6EAB5-9B9]/[78002-088]&quot;,&quot;context&quot;:{&quot;[5C422-812]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique routine_task_id&quot;},&quot;[78002-088]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of routine_task_id&quot;},&quot;[6EAB5-9B9]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Completion Rate&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;level4&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8e94b08c5e619b0416b15;&quot;,&quot;dashboard&quot;:&quot;5ac8e94b08c5e619b0416b12;LogCorporate&quot;,&quot;queryGuid&quot;:&quot;0F2A7-BE52-90CA-1678-A3D7-BE03-B538-B109-7&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletionRateData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletionRateData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Logs Completion Rate Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Completion Rate Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Completion Rate Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Log - Log Detailed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Corporate&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level4]&quot;,&quot;index&quot;:0},&quot;activeHierarchy&quot;:{&quot;_id&quot;:&quot;5ad0c100ac049b4290cdf0a4&quot;,&quot;title&quot;:&quot;Corporate&quot;},&quot;hierarchies&quot;:[],&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[BBB46-855]&quot;,&quot;context&quot;:{&quot;[BBB46-855]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;},&quot;[29DD4-F4A]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[BBB46-855]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;context&quot;:{&quot;[A4C75-F7A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Required&quot;}},&quot;title&quot;:&quot;Required Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([5C970-0BA])&quot;,&quot;context&quot;:{&quot;[5C970-0BA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:110},&quot;field&quot;:{&quot;id&quot;:&quot;sum([5C970-0BA])&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;context&quot;:{&quot;[415DE-424]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[D30FE-F3E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;},&quot;[C1A57-7B2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([621F1-303])&quot;,&quot;context&quot;:{&quot;[621F1-303]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Auto Completed&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:105},&quot;field&quot;:{&quot;id&quot;:&quot;sum([621F1-303])&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;context&quot;:{&quot;[1C61F-225]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[2FEEF-4B4]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_auto_completed&quot;},&quot;[189F8-2AA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:104},&quot;field&quot;:{&quot;id&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;index&quot;:6},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;count([28BB7-102])&quot;,&quot;context&quot;:{&quot;[28BB7-102]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log In Progress&quot;}},&quot;title&quot;:&quot;Partially Completed Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:103},&quot;field&quot;:{&quot;id&quot;:&quot;count([28BB7-102])&quot;,&quot;index&quot;:7},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;context&quot;:{&quot;[A446B-E84]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[36C41-CA3]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_in_progress&quot;},&quot;[E307E-7F5]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Partially Completed Logs %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:108},&quot;field&quot;:{&quot;id&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;index&quot;:8},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[AD9F2-DAC]&quot;,&quot;context&quot;:{&quot;[AD9F2-DAC]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(sum([F632A-161]),[0318F-92E])&quot;,&quot;context&quot;:{&quot;[0318F-92E]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.MIT&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[F632A-161]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:114},&quot;field&quot;:{&quot;id&quot;:&quot;[AD9F2-DAC]&quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FC80-154]&quot;,&quot;context&quot;:{&quot;[2FC80-154]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([EA89C-AB2]),[E7622-E90])&quot;,&quot;context&quot;:{&quot;[E7622-E90]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.SHIFT_LDR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[EA89C-AB2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:107},&quot;field&quot;:{&quot;id&quot;:&quot;[2FC80-154]&quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[1B57B-335]&quot;,&quot;context&quot;:{&quot;[1B57B-335]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([9F3A5-89E]),[7BDF5-73A])&quot;,&quot;context&quot;:{&quot;[7BDF5-73A]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.ASSISTANT_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[9F3A5-89E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:120},&quot;field&quot;:{&quot;id&quot;:&quot;[1B57B-335]&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[E859A-C42]&quot;,&quot;context&quot;:{&quot;[E859A-C42]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([55792-84F]),[D291C-2AD])&quot;,&quot;context&quot;:{&quot;[D291C-2AD]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.REST_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[55792-84F]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;[E859A-C42]&quot;,&quot;index&quot;:12},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[668B1-B57]&quot;,&quot;context&quot;:{&quot;[668B1-B57]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([656B0-64B]),[CE17D-9F0])&quot;,&quot;context&quot;:{&quot;[CE17D-9F0]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;and&quot;:[{&quot;doesntEqual&quot;:&quot;LookRole.name.ROOT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSOCIATE&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSISTANT_MGR&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.MIT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.REST_MGR&quot;}]},&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[656B0-64B]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[668B1-B57]&quot;,&quot;index&quot;:13},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Log Type &quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Log Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;Corporate&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8e94b08c5e619b0416b19;&quot;,&quot;dashboard&quot;:&quot;5ac8e94b08c5e619b0416b12;LogCorporate&quot;,&quot;queryGuid&quot;:&quot;5AD55-7B46-96F4-DAD8-6717-F36A-8AD5-6C7F-2&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LOG COMPLETION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logs DagLevel" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aDagLevels&quot;,&quot;fullname&quot;:&quot;LocalHost/DagLevels&quot;,&quot;id&quot;:&quot;aLOCALHOST_aDAGLEVELS&quot;,&quot;title&quot;:&quot;DagLevels&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dag_id_parent]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;dag_id_parent&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.startlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;startlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.endlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;endlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dagtype]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;dagtype&quot;}}],&quot;ungroup&quot;:true,&quot;count&quot;:3,&quot;offset&quot;:0,&quot;isMaskedResult&quot;:false,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5a7b4a7dffbeb52094ab4856;&quot;,&quot;dashboard&quot;:&quot;5a7b4a54ffbeb52094ab4843;DagLevels&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/DagLevels/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logs - Log Completed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[B023A-48A]&quot;,&quot;context&quot;:{&quot;[D3167-880]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_completed&quot;},&quot;[B023A-48A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8e95308c5e619b0416b2d;&quot;,&quot;dashboard&quot;:&quot;5ac8e95308c5e619b0416b2b;LogFranchise&quot;,&quot;queryGuid&quot;:&quot;14C10-C809-03A8-BC4B-73D9-4CE8-C086-8274-B&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletedData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletedData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Completed Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Completed Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logs - Log Required" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[04876-EA8]&quot;,&quot;context&quot;:{&quot;[B1ED8-DD0]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[04876-EA8]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Required&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;abbreviations&quot;:{&quot;t&quot;:true,&quot;b&quot;:true,&quot;m&quot;:true,&quot;k&quot;:false},&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071CE&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8e95308c5e619b0416b2c;&quot;,&quot;dashboard&quot;:&quot;5ac8e95308c5e619b0416b2b;LogFranchise&quot;,&quot;queryGuid&quot;:&quot;6B11A-0096-8576-773B-6577-9784-3424-B153-F&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsRequiredData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsRequiredData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
//	FailureMessage = &quot;Logs Required Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Required Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Required Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logs - Log Completion Rate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6EAB5-9B9]/[78002-088]&quot;,&quot;context&quot;:{&quot;[5C422-812]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique routine_task_id&quot;},&quot;[78002-088]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.routine_task_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of routine_task_id&quot;},&quot;[6EAB5-9B9]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_completed&quot;}},&quot;title&quot;:&quot;Completion Rate&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Action&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8e95308c5e619b0416b2e;&quot;,&quot;dashboard&quot;:&quot;5ac8e95308c5e619b0416b2b;LogFranchise&quot;,&quot;queryGuid&quot;:&quot;1B8D4-996E-DDDD-1C18-F70C-588C-D544-6502-8&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">logsCompletionRateData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;logsCompletionRateData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Logs Completion Rate Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Logs Completion Rate Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Logs Completion Rate Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logs - Log Fanchise" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Franchises&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;index&quot;:0},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[16886-8D9]&quot;,&quot;context&quot;:{&quot;[16886-8D9]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[16886-8D9]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6BB6E-BE1]&quot;,&quot;context&quot;:{&quot;[AF1DA-EB2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.temp_in_range]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique temp_in_range&quot;},&quot;[6BB6E-BE1]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.temp_in_range]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total temp_in_range&quot;}},&quot;title&quot;:&quot;Number of Completed Temperatures that meet the standard&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:217},&quot;field&quot;:{&quot;id&quot;:&quot;[6BB6E-BE1]&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[576A3-C79]&quot;,&quot;context&quot;:{&quot;[CB796-5C6]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.temp_out_range]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique temp_out_range&quot;},&quot;[576A3-C79]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.temp_out_range]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total temp_out_range&quot;}},&quot;title&quot;:&quot;Number of Completed Temperatures that are off standard&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:205},&quot;field&quot;:{&quot;id&quot;:&quot;[576A3-C79]&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([38FDC-252])&quot;,&quot;context&quot;:{&quot;[38FDC-252]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.action_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Action Required&quot;}},&quot;title&quot;:&quot;Number of Action Plans Created&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:106},&quot;field&quot;:{&quot;id&quot;:&quot;sum([38FDC-252])&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Log Type &quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Log Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;Franchises&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8e95308c5e619b0416b30;&quot;,&quot;dashboard&quot;:&quot;5ac8e95308c5e619b0416b2b;LogFranchise&quot;,&quot;queryGuid&quot;:&quot;5466F-823F-E220-DBB8-4A8C-8978-26F3-DD65-6&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logs - Log Detailed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Log(LocalHost)&quot;,&quot;title&quot;:&quot;Log&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aLog&quot;,&quot;fullname&quot;:&quot;LocalHost/Log&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Franchises&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;index&quot;:0},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[BBB46-855]&quot;,&quot;context&quot;:{&quot;[BBB46-855]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;},&quot;[29DD4-F4A]&quot;:{&quot;dim&quot;:&quot;[v_dag_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[BBB46-855]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;context&quot;:{&quot;[A4C75-F7A]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Required&quot;}},&quot;title&quot;:&quot;Required Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([A4C75-F7A])&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([5C970-0BA])&quot;,&quot;context&quot;:{&quot;[5C970-0BA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:110},&quot;field&quot;:{&quot;id&quot;:&quot;sum([5C970-0BA])&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;context&quot;:{&quot;[415DE-424]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[D30FE-F3E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;},&quot;[C1A57-7B2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Completed&quot;}},&quot;title&quot;:&quot;Logs Completed by User %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;sum([C1A57-7B2])/[D30FE-F3E]&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([621F1-303])&quot;,&quot;context&quot;:{&quot;[621F1-303]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log Auto Completed&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:105},&quot;field&quot;:{&quot;id&quot;:&quot;sum([621F1-303])&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;context&quot;:{&quot;[1C61F-225]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[2FEEF-4B4]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_auto_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_auto_completed&quot;},&quot;[189F8-2AA]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Logs Completed Auto-Closed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:104},&quot;field&quot;:{&quot;id&quot;:&quot;[2FEEF-4B4]/[189F8-2AA]&quot;,&quot;index&quot;:6},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;count([28BB7-102])&quot;,&quot;context&quot;:{&quot;[28BB7-102]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Log In Progress&quot;}},&quot;title&quot;:&quot;Partially Completed Logs&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:103},&quot;field&quot;:{&quot;id&quot;:&quot;count([28BB7-102])&quot;,&quot;index&quot;:7},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;context&quot;:{&quot;[A446B-E84]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique log_required&quot;},&quot;[36C41-CA3]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total log_in_progress&quot;},&quot;[E307E-7F5]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_required]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of log_required&quot;}},&quot;title&quot;:&quot;Partially Completed Logs %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:108},&quot;field&quot;:{&quot;id&quot;:&quot;[36C41-CA3]/[E307E-7F5]&quot;,&quot;index&quot;:8},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[AD9F2-DAC]&quot;,&quot;context&quot;:{&quot;[AD9F2-DAC]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(sum([F632A-161]),[0318F-92E])&quot;,&quot;context&quot;:{&quot;[0318F-92E]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.MIT&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[F632A-161]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;}},&quot;title&quot;:&quot;Logs Completed by Manager in Training&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:114},&quot;field&quot;:{&quot;id&quot;:&quot;[AD9F2-DAC]&quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2FC80-154]&quot;,&quot;context&quot;:{&quot;[2FC80-154]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([EA89C-AB2]),[E7622-E90])&quot;,&quot;context&quot;:{&quot;[E7622-E90]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.SHIFT_LDR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[EA89C-AB2]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;}},&quot;title&quot;:&quot;Logs Completed by Shift Leader&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:107},&quot;field&quot;:{&quot;id&quot;:&quot;[2FC80-154]&quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[1B57B-335]&quot;,&quot;context&quot;:{&quot;[1B57B-335]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([9F3A5-89E]),[7BDF5-73A])&quot;,&quot;context&quot;:{&quot;[7BDF5-73A]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.ASSISTANT_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[9F3A5-89E]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Assistant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:120},&quot;field&quot;:{&quot;id&quot;:&quot;[1B57B-335]&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[E859A-C42]&quot;,&quot;context&quot;:{&quot;[E859A-C42]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([55792-84F]),[D291C-2AD])&quot;,&quot;context&quot;:{&quot;[D291C-2AD]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookRole.name.REST_MGR&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[55792-84F]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;}},&quot;title&quot;:&quot;Logs Completed by Restaurant Manager&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;[E859A-C42]&quot;,&quot;index&quot;:12},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[668B1-B57]&quot;,&quot;context&quot;:{&quot;[668B1-B57]&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;(SUM([656B0-64B]),[CE17D-9F0])&quot;,&quot;context&quot;:{&quot;[CE17D-9F0]&quot;:{&quot;dim&quot;:&quot;[v_user_data_for_log.role_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;and&quot;:[{&quot;doesntEqual&quot;:&quot;LookRole.name.ROOT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSOCIATE&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.ASSISTANT_MGR&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.MIT&quot;},{&quot;doesntEqual&quot;:&quot;LookRole.name.REST_MGR&quot;}]},&quot;title&quot;:&quot;role_name_text_cd&quot;},&quot;[656B0-64B]&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.log_completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;log_completed&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;}},&quot;title&quot;:&quot;Logs Completed by ARL&apos;s&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[668B1-B57]&quot;,&quot;index&quot;:13},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_location_routine_task_log.task_date (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_action]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Log Type &quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_action_category.text_value_category]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Log Category&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_dayofweek.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Day of Week&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;userMultiSelect&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_daypart.text_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Daypart&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;Franchises&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8e95308c5e619b0416b32;&quot;,&quot;dashboard&quot;:&quot;5ac8e95308c5e619b0416b2b;LogFranchise&quot;,&quot;queryGuid&quot;:&quot;33867-9E3A-3414-E148-238A-4CED-3618-00FC-E&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Log/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="COMPANY DETAILED MODULE COMPLETION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Detailed LogLevel" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aDagLevels&quot;,&quot;fullname&quot;:&quot;LocalHost/DagLevels&quot;,&quot;id&quot;:&quot;aLOCALHOST_aDAGLEVELS&quot;,&quot;title&quot;:&quot;DagLevels&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dag_id_parent]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;dag_id_parent&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.startlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;startlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.endlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;endlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dagtype]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;dagtype&quot;}}],&quot;ungroup&quot;:true,&quot;count&quot;:3,&quot;offset&quot;:0,&quot;isMaskedResult&quot;:false,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5a7b4a7dffbeb52094ab4856;&quot;,&quot;dashboard&quot;:&quot;5a7b4a54ffbeb52094ab4843;DagLevels&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/DagLevels/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Detailed - Foundation Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;title&quot;:&quot;Module&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;,&quot;id&quot;:&quot;aLOCALHOST_aMODULE&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[71749-F5C]/[5777C-5DA]&quot;,&quot;context&quot;:{&quot;[B2778-EC6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[5777C-5DA]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[71749-F5C]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Foundation&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.RM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8edde08c5e619b0416c70;&quot;,&quot;dashboard&quot;:&quot;5ac8edde08c5e619b0416c6e;ModuleCompany&quot;,&quot;queryGuid&quot;:&quot;C64A5-DED6-A35B-04B8-3F24-EF6B-B98A-E2E1-5&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FoundationTotalCompleted</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;FoundationTotalCompleted&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Foundation Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;FoundationCompletion Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Foundation Completion Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Detailed - Overall Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;title&quot;:&quot;Module&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;,&quot;id&quot;:&quot;aLOCALHOST_aMODULE&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[0C080-B34]/[5263B-DD9]&quot;,&quot;context&quot;:{&quot;[D3F88-691]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[5263B-DD9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[0C080-B34]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Overall&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071CE&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8edde08c5e619b0416c6f;&quot;,&quot;dashboard&quot;:&quot;5ac8edde08c5e619b0416c6e;ModuleCompany&quot;,&quot;queryGuid&quot;:&quot;CB00C-6D2D-8485-48AA-2B14-593A-CB6F-06F5-9&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OverallTotalCompleted</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;OverallTotalCompleted&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Overall Team Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Overall Team Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Overall Team Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Detailed - Team Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;title&quot;:&quot;Module&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;,&quot;id&quot;:&quot;aLOCALHOST_aMODULE&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6E1D2-462]/[06EFA-C56]&quot;,&quot;context&quot;:{&quot;[67CF9-624]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[06EFA-C56]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[6E1D2-462]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Team&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.TM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8edde08c5e619b0416c71;&quot;,&quot;dashboard&quot;:&quot;5ac8edde08c5e619b0416c6e;ModuleCompany&quot;,&quot;queryGuid&quot;:&quot;F2485-F0A9-1DB3-6EFB-8447-AD6D-52C8-53D7-6&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">TeamTotalCompleted</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;TeamTotalCompleted&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Team Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Team Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Team Completion Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Detailed - Regional Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;title&quot;:&quot;Module&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;,&quot;id&quot;:&quot;aLOCALHOST_aMODULE&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[721D5-A09]/[AA0FD-E66]&quot;,&quot;context&quot;:{&quot;[D6F96-504]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[AA0FD-E66]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[721D5-A09]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Regional&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.BK_USER_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;level5_comp&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8edde08c5e619b0416c73;&quot;,&quot;dashboard&quot;:&quot;5ac8edde08c5e619b0416c6e;ModuleCompany&quot;,&quot;queryGuid&quot;:&quot;B01E7-52D4-7FCC-52BA-F25C-900C-F305-EFF3-7&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RegionalCompletionData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;RegionalCompletionData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Regional Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Regional Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Regional Completion Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Detailed - Completion Detailed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;title&quot;:&quot;Module&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;,&quot;id&quot;:&quot;aLOCALHOST_aMODULE&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Company&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;index&quot;:0},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2701E-2E2]&quot;,&quot;context&quot;:{&quot;[2701E-2E2]&quot;:{&quot;dim&quot;:&quot;[v_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[2701E-2E2]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[25C1F-2EB]&quot;,&quot;context&quot;:{&quot;[25C1F-2EB]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;}},&quot;title&quot;:&quot;Total Required Modules&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color_bkp&quot;:{&quot;color&quot;:&quot;#00cee6&quot;,&quot;type&quot;:&quot;color&quot;},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:105},&quot;field&quot;:{&quot;id&quot;:&quot;[25C1F-2EB]&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([0967A-DA3])&quot;,&quot;context&quot;:{&quot;[0967A-DA3]&quot;:{&quot;dim&quot;:&quot;[v_user_course.in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;In Progress&quot;}},&quot;title&quot;:&quot;In Progress Modules&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:109},&quot;field&quot;:{&quot;id&quot;:&quot;sum([0967A-DA3])&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([2D788-890])&quot;,&quot;context&quot;:{&quot;[2D788-890]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Completed&quot;}},&quot;title&quot;:&quot;Total Modules Completed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:124},&quot;field&quot;:{&quot;id&quot;:&quot;sum([2D788-890])&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[3B73C-7C3]/[9708D-7DD]&quot;,&quot;context&quot;:{&quot;[9708D-7DD]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[3B73C-7C3]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Modules Completions %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:122},&quot;field&quot;:{&quot;id&quot;:&quot;[3B73C-7C3]/[9708D-7DD]&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[80287-BFF]/[3D68E-C49]&quot;,&quot;context&quot;:{&quot;[1AF1A-5F9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[3D68E-C49]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[80287-BFF]&quot;:{&quot;dim&quot;:&quot;[v_user_course.in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total in_progress&quot;}},&quot;title&quot;:&quot;In Progress Modules %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;[80287-BFF]/[3D68E-C49]&quot;,&quot;index&quot;:6},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;SUM([90D67-E09],IF([8B51B-609]/[23A9E-C9F]&gt;=0.95,1,0))\n&quot;,&quot;context&quot;:{&quot;[5FC53-2CD]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[23A9E-C9F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[8B51B-609]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;},&quot;[90D67-E09]&quot;:{&quot;dim&quot;:&quot;[v_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;location_id&quot;}},&quot;title&quot;:&quot;95-100%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;SUM([90D67-E09],IF([8B51B-609]/[23A9E-C9F]&gt;=0.95,1,0))\n&quot;,&quot;index&quot;:7},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;   SUM([location_id],\n       CASE WHEN [9C03C-529]/[90E28-30F]&lt;0.90 AND [9C03C-529]/[90E28-30F]&gt;=0.85 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;context&quot;:{&quot;[62421-FC4]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[90E28-30F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[9C03C-529]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;85-89.9%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;   SUM([location_id],\n       CASE WHEN [9C03C-529]/[90E28-30F]&lt;0.90 AND [9C03C-529]/[90E28-30F]&gt;=0.85 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;index&quot;:8},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;   SUM([location_id],\n       CASE WHEN [29880-87E]/[819B5-C4A]&lt;0.95 AND [29880-87E]/[819B5-C4A]&gt;=0.90 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;context&quot;:{&quot;[819B5-C4A]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[29880-87E]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;90-94.9%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;   SUM([location_id],\n       CASE WHEN [29880-87E]/[819B5-C4A]&lt;0.95 AND [29880-87E]/[819B5-C4A]&gt;=0.90 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;   SUM([location_id],\n       CASE WHEN [2B5BF-9A5]/[32953-69F]&lt;0.85 AND [2B5BF-9A5]/[32953-69F]&gt;=0.80 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;context&quot;:{&quot;[0880A-E7F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[32953-69F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[2B5BF-9A5]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;80-84.9%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;   SUM([location_id],\n       CASE WHEN [2B5BF-9A5]/[32953-69F]&lt;0.85 AND [2B5BF-9A5]/[32953-69F]&gt;=0.80 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;SUM([location_id],if([23A52-9CC]/[FFD4A-8D9]&lt;0.8,1,0))&quot;,&quot;context&quot;:{&quot;[C7E2D-8EE]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[FFD4A-8D9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[23A52-9CC]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;79.9% and below&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;SUM([location_id],if([23A52-9CC]/[FFD4A-8D9]&lt;0.8,1,0))&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Role&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;Company&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8edde08c5e619b0416c75;&quot;,&quot;dashboard&quot;:&quot;5ac8edde08c5e619b0416c6e;ModuleCompany&quot;,&quot;queryGuid&quot;:&quot;BA7E1-D24B-551E-468B-6A82-9CAE-2D37-CBD7-1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company Detailed - Completion Detailed 2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;title&quot;:&quot;Module&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;,&quot;id&quot;:&quot;aLOCALHOST_aMODULE&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Company&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;index&quot;:0},&quot;activeHierarchy&quot;:{&quot;_id&quot;:&quot;5a8451d18ccc9a335cfbad37&quot;,&quot;title&quot;:&quot;Company&quot;},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;count([B3A65-80F])&quot;,&quot;context&quot;:{&quot;[B3A65-80F]&quot;:{&quot;dim&quot;:&quot;[v_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Location Id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;count([B3A65-80F])&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([6DBDD-BF6])&quot;,&quot;context&quot;:{&quot;[6DBDD-BF6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;}},&quot;title&quot;:&quot;Total Required Modules&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:122},&quot;field&quot;:{&quot;id&quot;:&quot;([6DBDD-BF6])&quot;,&quot;index&quot;:2},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[A985A-5F2]/[95749-9EE]&quot;,&quot;context&quot;:{&quot;[D197F-945]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[95749-9EE]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[A985A-5F2]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Modules Completions %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:131},&quot;field&quot;:{&quot;id&quot;:&quot;[A985A-5F2]/[95749-9EE]&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([E4600-34C],[B5D34-DDF])/([37E41-65D],[B5D34-DDF])&quot;,&quot;context&quot;:{&quot;[37E41-65D]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[9D170-8AE]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[B5D34-DDF]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_1&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[E4600-34C]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Basics %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:99},&quot;field&quot;:{&quot;id&quot;:&quot;([E4600-34C],[B5D34-DDF])/([37E41-65D],[B5D34-DDF])&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([7C46D-8FC],[79D5E-176])/([93A8E-537],[79D5E-176])\n&quot;,&quot;context&quot;:{&quot;[93A8E-537]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[97709-35B]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[79D5E-176]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_2&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[7C46D-8FC]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Preparing Product %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;([7C46D-8FC],[79D5E-176])/([93A8E-537],[79D5E-176])\n&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([F384A-2D9],[5ECB1-3D6])/([40075-9EE],[5ECB1-3D6])\n&quot;,&quot;context&quot;:{&quot;[40075-9EE]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[3D894-596]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_4&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[5ECB1-3D6]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_3&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[F384A-2D9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Building Products %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:126},&quot;field&quot;:{&quot;id&quot;:&quot;([F384A-2D9],[5ECB1-3D6])/([40075-9EE],[5ECB1-3D6])\n&quot;,&quot;index&quot;:6},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([37A6D-219],[D4B62-BCA])/([679DA-5EF],[D4B62-BCA])\n&quot;,&quot;context&quot;:{&quot;[679DA-5EF]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[16591-2A0]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[D4B62-BCA]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_4&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[37A6D-219]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Cleanliness %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:121},&quot;field&quot;:{&quot;id&quot;:&quot;([37A6D-219],[D4B62-BCA])/([679DA-5EF],[D4B62-BCA])\n&quot;,&quot;index&quot;:7},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([3F352-A3A],[D00D3-E70])/([E1137-37F],[D00D3-E70])\n&quot;,&quot;context&quot;:{&quot;[E1137-37F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[782EC-0FC]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[D00D3-E70]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_5&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[3F352-A3A]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Operational Excellence %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:103},&quot;field&quot;:{&quot;id&quot;:&quot;([3F352-A3A],[D00D3-E70])/([E1137-37F],[D00D3-E70])\n&quot;,&quot;index&quot;:8},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([5259F-41E],[D7225-D86],[649ED-E78])/([E7FE0-286],[D7225-D86],[649ED-E78])&quot;,&quot;context&quot;:{&quot;[E7FE0-286]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[D7225-D86]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.RM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[32664-C8B]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[649ED-E78]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.BASIC&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[5259F-41E]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Foundations Basics completed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:123},&quot;field&quot;:{&quot;id&quot;:&quot;([5259F-41E],[D7225-D86],[649ED-E78])/([E7FE0-286],[D7225-D86],[649ED-E78])&quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([7A960-8E6],[4627F-F0D],[8CC6D-96D])/([35F95-2A6],[4627F-F0D],[8CC6D-96D])&quot;,&quot;context&quot;:{&quot;[35F95-2A6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[4627F-F0D]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.RM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[FE89B-6C2]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[8CC6D-96D]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.SH_CTRL&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[7A960-8E6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Foundations Shift Control completed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:121},&quot;field&quot;:{&quot;id&quot;:&quot;([7A960-8E6],[4627F-F0D],[8CC6D-96D])/([35F95-2A6],[4627F-F0D],[8CC6D-96D])&quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([AC507-F01],[50854-75F])/([B45F1-4C9],[50854-75F])&quot;,&quot;context&quot;:{&quot;[B45F1-4C9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[34C1B-D85]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[50854-75F]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.BK_USER_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[AC507-F01]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Regional Modules completed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:142},&quot;field&quot;:{&quot;id&quot;:&quot;([AC507-F01],[50854-75F])/([B45F1-4C9],[50854-75F])&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Role&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_comp]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Company&quot;]},&quot;title&quot;:&quot;Company&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8edde08c5e619b0416c76;&quot;,&quot;dashboard&quot;:&quot;5ac8edde08c5e619b0416c6e;ModuleCompany&quot;,&quot;queryGuid&quot;:&quot;DD71E-C532-A254-5059-0410-526E-BD66-4057-1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CORPORATE DETAILED MODULE COMPLETION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Detailed DagLevel" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aDagLevels&quot;,&quot;fullname&quot;:&quot;LocalHost/DagLevels&quot;,&quot;id&quot;:&quot;aLOCALHOST_aDAGLEVELS&quot;,&quot;title&quot;:&quot;DagLevels&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dag_id_parent]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;dag_id_parent&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.startlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;startlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.endlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;endlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dagtype]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;dagtype&quot;}}],&quot;ungroup&quot;:true,&quot;count&quot;:3,&quot;offset&quot;:0,&quot;isMaskedResult&quot;:false,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5a7b4a7dffbeb52094ab4856;&quot;,&quot;dashboard&quot;:&quot;5a7b4a54ffbeb52094ab4843;DagLevels&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/DagLevels/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Detailed Overall Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[0C080-B34]/[5263B-DD9]&quot;,&quot;context&quot;:{&quot;[D3F88-691]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[5263B-DD9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[0C080-B34]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Overall&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071CE&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;level4&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8f41808c5e619b0416dcc;&quot;,&quot;dashboard&quot;:&quot;5ac8f41808c5e619b0416dcb;ModuleCorporate&quot;,&quot;queryGuid&quot;:&quot;963CB-73C6-92E0-51F8-B84A-0941-7591-A6F7-3&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OverallTotalCompleted</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;OverallTotalCompleted&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
	//FailureMessage = &quot;Overall Team Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
		log.info(&quot;Overall Team Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Overall Team Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Detailed Foundation Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[71749-F5C]/[5777C-5DA]&quot;,&quot;context&quot;:{&quot;[B2778-EC6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[5777C-5DA]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[71749-F5C]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Foundation&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.RM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;level4&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8f41808c5e619b0416dcd;&quot;,&quot;dashboard&quot;:&quot;5ac8f41808c5e619b0416dcb;ModuleCorporate&quot;,&quot;queryGuid&quot;:&quot;EB2D9-9B4E-D01D-AADB-A4E9-7ED1-2637-6654-F&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FoundationTotalCompleted</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;FoundationTotalCompleted&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Foundation Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Foundation Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Foundation Completion Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Detailed Team Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[721D5-A09]/[AA0FD-E66]&quot;,&quot;context&quot;:{&quot;[D6F96-504]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[AA0FD-E66]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[721D5-A09]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Regional&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.BK_USER_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;level4&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8f41808c5e619b0416dd0;&quot;,&quot;dashboard&quot;:&quot;5ac8f41808c5e619b0416dcb;ModuleCorporate&quot;,&quot;queryGuid&quot;:&quot;FDB5A-32DD-F54F-28C9-82AF-D9C3-754C-C188-E&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RegionalCompletionData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;RegionalCompletionData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Regional Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Regional Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Regional Completion Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Detailed Regional Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6E1D2-462]/[06EFA-C56]&quot;,&quot;context&quot;:{&quot;[67CF9-624]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[06EFA-C56]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[6E1D2-462]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Team&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.TM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;level4&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8f41808c5e619b0416dce;&quot;,&quot;dashboard&quot;:&quot;5ac8f41808c5e619b0416dcb;ModuleCorporate&quot;,&quot;queryGuid&quot;:&quot;2F316-2B65-998C-154B-6BA4-C892-099B-C7C2-C&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">TeamTotalCompleted</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;TeamTotalCompleted&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
	//FailureMessage = &quot;Team Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Team Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Team Completion Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Detailed Log Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Corporate&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level4]&quot;,&quot;index&quot;:0},&quot;activeHierarchy&quot;:{&quot;_id&quot;:&quot;5acbbba44110e124a4852bc7&quot;,&quot;title&quot;:&quot;Corporate&quot;},&quot;hierarchies&quot;:[],&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2701E-2E2]&quot;,&quot;context&quot;:{&quot;[2701E-2E2]&quot;:{&quot;dim&quot;:&quot;[v_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[2701E-2E2]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[25C1F-2EB]&quot;,&quot;context&quot;:{&quot;[25C1F-2EB]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;}},&quot;title&quot;:&quot;Total Required Modules&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color_bkp&quot;:{&quot;color&quot;:&quot;#00cee6&quot;,&quot;type&quot;:&quot;color&quot;},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:105},&quot;field&quot;:{&quot;id&quot;:&quot;[25C1F-2EB]&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([0967A-DA3])&quot;,&quot;context&quot;:{&quot;[0967A-DA3]&quot;:{&quot;dim&quot;:&quot;[v_user_course.in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;In Progress&quot;}},&quot;title&quot;:&quot;In Progress Modules&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:109},&quot;field&quot;:{&quot;id&quot;:&quot;sum([0967A-DA3])&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([2D788-890])&quot;,&quot;context&quot;:{&quot;[2D788-890]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Completed&quot;}},&quot;title&quot;:&quot;Total Modules Completed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:124},&quot;field&quot;:{&quot;id&quot;:&quot;sum([2D788-890])&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[3B73C-7C3]/[9708D-7DD]&quot;,&quot;context&quot;:{&quot;[9708D-7DD]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[3B73C-7C3]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Modules Completions %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:122},&quot;field&quot;:{&quot;id&quot;:&quot;[3B73C-7C3]/[9708D-7DD]&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[80287-BFF]/[3D68E-C49]&quot;,&quot;context&quot;:{&quot;[1AF1A-5F9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[3D68E-C49]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[80287-BFF]&quot;:{&quot;dim&quot;:&quot;[v_user_course.in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total in_progress&quot;}},&quot;title&quot;:&quot;In Progress Modules %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;[80287-BFF]/[3D68E-C49]&quot;,&quot;index&quot;:6},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;SUM([90D67-E09],IF([8B51B-609]/[23A9E-C9F]&gt;=0.95,1,0))\n&quot;,&quot;context&quot;:{&quot;[5FC53-2CD]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[23A9E-C9F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[8B51B-609]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;},&quot;[90D67-E09]&quot;:{&quot;dim&quot;:&quot;[v_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;location_id&quot;}},&quot;title&quot;:&quot;95-100%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;SUM([90D67-E09],IF([8B51B-609]/[23A9E-C9F]&gt;=0.95,1,0))\n&quot;,&quot;index&quot;:7},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;   SUM([location_id],\n       CASE WHEN [9C03C-529]/[90E28-30F]&lt;0.90 AND [9C03C-529]/[90E28-30F]&gt;=0.85 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;context&quot;:{&quot;[62421-FC4]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[90E28-30F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[9C03C-529]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;85-89.9%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;   SUM([location_id],\n       CASE WHEN [9C03C-529]/[90E28-30F]&lt;0.90 AND [9C03C-529]/[90E28-30F]&gt;=0.85 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;index&quot;:8},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;   SUM([location_id],\n       CASE WHEN [29880-87E]/[819B5-C4A]&lt;0.95 AND [29880-87E]/[819B5-C4A]&gt;=0.90 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;context&quot;:{&quot;[819B5-C4A]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[29880-87E]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;90-94.9%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;   SUM([location_id],\n       CASE WHEN [29880-87E]/[819B5-C4A]&lt;0.95 AND [29880-87E]/[819B5-C4A]&gt;=0.90 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;   SUM([location_id],\n       CASE WHEN [2B5BF-9A5]/[32953-69F]&lt;0.85 AND [2B5BF-9A5]/[32953-69F]&gt;=0.80 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;context&quot;:{&quot;[0880A-E7F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[32953-69F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[2B5BF-9A5]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;80-84.9%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;   SUM([location_id],\n       CASE WHEN [2B5BF-9A5]/[32953-69F]&lt;0.85 AND [2B5BF-9A5]/[32953-69F]&gt;=0.80 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;SUM([location_id],if([23A52-9CC]/[FFD4A-8D9]&lt;0.8,1,0))&quot;,&quot;context&quot;:{&quot;[C7E2D-8EE]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[FFD4A-8D9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[23A52-9CC]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;79.9% and below&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;SUM([location_id],if([23A52-9CC]/[FFD4A-8D9]&lt;0.8,1,0))&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Role&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;Corporate&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8f41808c5e619b0416dd2;&quot;,&quot;dashboard&quot;:&quot;5ac8f41808c5e619b0416dcb;ModuleCorporate&quot;,&quot;queryGuid&quot;:&quot;8AEE2-2C52-2B9D-0099-1236-863B-7246-2563-A&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Corporate Detailed Module Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Corporate&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level4]&quot;,&quot;index&quot;:0},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;count([B3A65-80F])&quot;,&quot;context&quot;:{&quot;[B3A65-80F]&quot;:{&quot;dim&quot;:&quot;[v_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Location Id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;count([B3A65-80F])&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([6DBDD-BF6])&quot;,&quot;context&quot;:{&quot;[6DBDD-BF6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;}},&quot;title&quot;:&quot;Total Required Modules&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:122},&quot;field&quot;:{&quot;id&quot;:&quot;([6DBDD-BF6])&quot;,&quot;index&quot;:2},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[A985A-5F2]/[95749-9EE]&quot;,&quot;context&quot;:{&quot;[D197F-945]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[95749-9EE]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[A985A-5F2]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Modules Completions %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:131},&quot;field&quot;:{&quot;id&quot;:&quot;[A985A-5F2]/[95749-9EE]&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([E4600-34C],[B5D34-DDF])/([37E41-65D],[B5D34-DDF])&quot;,&quot;context&quot;:{&quot;[37E41-65D]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[9D170-8AE]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[B5D34-DDF]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_1&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[E4600-34C]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Basics %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:99},&quot;field&quot;:{&quot;id&quot;:&quot;([E4600-34C],[B5D34-DDF])/([37E41-65D],[B5D34-DDF])&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([7C46D-8FC],[79D5E-176])/([93A8E-537],[79D5E-176])\n&quot;,&quot;context&quot;:{&quot;[93A8E-537]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[97709-35B]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[79D5E-176]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_2&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[7C46D-8FC]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Preparing Product %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;([7C46D-8FC],[79D5E-176])/([93A8E-537],[79D5E-176])\n&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([F384A-2D9],[5ECB1-3D6])/([40075-9EE],[5ECB1-3D6])\n&quot;,&quot;context&quot;:{&quot;[40075-9EE]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[3D894-596]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_4&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[5ECB1-3D6]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_3&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[F384A-2D9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Building Products %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:126},&quot;field&quot;:{&quot;id&quot;:&quot;([F384A-2D9],[5ECB1-3D6])/([40075-9EE],[5ECB1-3D6])\n&quot;,&quot;index&quot;:6},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([37A6D-219],[D4B62-BCA])/([679DA-5EF],[D4B62-BCA])\n&quot;,&quot;context&quot;:{&quot;[679DA-5EF]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[16591-2A0]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[D4B62-BCA]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_4&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[37A6D-219]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Cleanliness %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:121},&quot;field&quot;:{&quot;id&quot;:&quot;([37A6D-219],[D4B62-BCA])/([679DA-5EF],[D4B62-BCA])\n&quot;,&quot;index&quot;:7},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([3F352-A3A],[D00D3-E70])/([E1137-37F],[D00D3-E70])\n&quot;,&quot;context&quot;:{&quot;[E1137-37F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[782EC-0FC]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[D00D3-E70]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_5&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[3F352-A3A]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Operational Excellence %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:103},&quot;field&quot;:{&quot;id&quot;:&quot;([3F352-A3A],[D00D3-E70])/([E1137-37F],[D00D3-E70])\n&quot;,&quot;index&quot;:8},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([5259F-41E],[D7225-D86],[649ED-E78])/([E7FE0-286],[D7225-D86],[649ED-E78])&quot;,&quot;context&quot;:{&quot;[E7FE0-286]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[D7225-D86]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.RM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[32664-C8B]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[649ED-E78]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.BASIC&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[5259F-41E]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Foundations Basics completed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:123},&quot;field&quot;:{&quot;id&quot;:&quot;([5259F-41E],[D7225-D86],[649ED-E78])/([E7FE0-286],[D7225-D86],[649ED-E78])&quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([7A960-8E6],[4627F-F0D],[8CC6D-96D])/([35F95-2A6],[4627F-F0D],[8CC6D-96D])&quot;,&quot;context&quot;:{&quot;[35F95-2A6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[4627F-F0D]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.RM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[FE89B-6C2]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[8CC6D-96D]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.SH_CTRL&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[7A960-8E6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Foundations Shift Control completed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:121},&quot;field&quot;:{&quot;id&quot;:&quot;([7A960-8E6],[4627F-F0D],[8CC6D-96D])/([35F95-2A6],[4627F-F0D],[8CC6D-96D])&quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([AC507-F01],[50854-75F])/([B45F1-4C9],[50854-75F])&quot;,&quot;context&quot;:{&quot;[B45F1-4C9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[34C1B-D85]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[50854-75F]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.BK_USER_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[AC507-F01]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Regional Modules completed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:142},&quot;field&quot;:{&quot;id&quot;:&quot;([AC507-F01],[50854-75F])/([B45F1-4C9],[50854-75F])&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Role&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level4]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Corporate&quot;]},&quot;title&quot;:&quot;Corporate&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8f41808c5e619b0416dd3;&quot;,&quot;dashboard&quot;:&quot;5ac8f41808c5e619b0416dcb;ModuleCorporate&quot;,&quot;queryGuid&quot;:&quot;BB3F0-9DF4-57F9-7FB8-423F-AD8B-D0AD-E2FD-E&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DETAILED MODULE COMPLETION" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Detailed DagLevel" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aDagLevels&quot;,&quot;fullname&quot;:&quot;LocalHost/DagLevels&quot;,&quot;id&quot;:&quot;aLOCALHOST_aDAGLEVELS&quot;,&quot;title&quot;:&quot;DagLevels&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dag_id_parent]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;dag_id_parent&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.startlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;startlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.endlevel]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;endlevel&quot;}},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_levels.dagtype]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;dagtype&quot;}}],&quot;ungroup&quot;:true,&quot;count&quot;:3,&quot;offset&quot;:0,&quot;isMaskedResult&quot;:false,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5a7b4a7dffbeb52094ab4856;&quot;,&quot;dashboard&quot;:&quot;5a7b4a54ffbeb52094ab4843;DagLevels&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/DagLevels/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Detailed Module Overall Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[0C080-B34]/[5263B-DD9]&quot;,&quot;context&quot;:{&quot;[D3F88-691]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[5263B-DD9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[0C080-B34]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Overall&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071CE&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8f45508c5e619b0416de7;&quot;,&quot;dashboard&quot;:&quot;5ac8f45508c5e619b0416de6;ModuleFranchise&quot;,&quot;queryGuid&quot;:&quot;0A908-0895-9E2C-0309-F196-40B8-6B65-4115-C&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">OverallTotalCompleted</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;OverallTotalCompleted&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Overall Team Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Overall Team Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Overall Team Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Detailed Module Foundation Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[71749-F5C]/[5777C-5DA]&quot;,&quot;context&quot;:{&quot;[B2778-EC6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[5777C-5DA]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[71749-F5C]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Foundation&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.RM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8f45508c5e619b0416de8;&quot;,&quot;dashboard&quot;:&quot;5ac8f45508c5e619b0416de6;ModuleFranchise&quot;,&quot;queryGuid&quot;:&quot;31BD5-07B8-CD9F-09D8-ED40-A525-D86E-E012-7&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FoundationTotalCompleted</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;FoundationTotalCompleted&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
//	FailureMessage = &quot;Foundation Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Foundation Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Foundation Completion Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Detailed Module Team Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[6E1D2-462]/[06EFA-C56]&quot;,&quot;context&quot;:{&quot;[67CF9-624]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[06EFA-C56]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[6E1D2-462]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Team&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.TM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8f45508c5e619b0416de9;&quot;,&quot;dashboard&quot;:&quot;5ac8f45508c5e619b0416de6;ModuleFranchise&quot;,&quot;queryGuid&quot;:&quot;A73C5-B3A1-549E-7279-FFE5-A86C-4F75-2B10-5&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">TeamTotalCompleted</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;TeamTotalCompleted&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
//	Failure=true;
	//FailureMessage = &quot;Team Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
	log.info(&quot;Team Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Team Completion Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Detailed Module Regional Completion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[721D5-A09]/[AA0FD-E66]&quot;,&quot;context&quot;:{&quot;[D6F96-504]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[AA0FD-E66]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[721D5-A09]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Regional&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;#0071ce&quot;}},&quot;source&quot;:&quot;value&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.BK_USER_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;role_value_title&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;level5_fran&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;format&quot;:&quot;json&quot;,&quot;widget&quot;:&quot;5ac8f45508c5e619b0416deb;&quot;,&quot;dashboard&quot;:&quot;5ac8f45508c5e619b0416de6;ModuleFranchise&quot;,&quot;queryGuid&quot;:&quot;E0860-8694-3A59-32AA-8EF8-432D-3714-1E89-D&quot;,&quot;offset&quot;:0,&quot;count&quot;:50000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract LogData" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RegionalCompletionData</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Verify data is not null or empty" enabled="false">
              <stringProp name="BeanShellAssertion.query">String logs = vars.get(&quot;RegionalCompletionData&quot;);
String userNameDisplay = vars.get(&quot;userName&quot;);

if(logs == null){
	//Failure=true;
	//FailureMessage = &quot;Regional Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay;
		log.info(&quot;Regional Completion Data is not loading. Expected: Should not be null &quot; + userNameDisplay);
}

log.info(&quot;Regional Completion Data = &quot; + logs);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Detailed Module Log Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Franchises&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;index&quot;:0},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[2701E-2E2]&quot;,&quot;context&quot;:{&quot;[2701E-2E2]&quot;:{&quot;dim&quot;:&quot;[v_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique location_id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;[2701E-2E2]&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[25C1F-2EB]&quot;,&quot;context&quot;:{&quot;[25C1F-2EB]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;}},&quot;title&quot;:&quot;Total Required Modules&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color_bkp&quot;:{&quot;color&quot;:&quot;#00cee6&quot;,&quot;type&quot;:&quot;color&quot;},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:105},&quot;field&quot;:{&quot;id&quot;:&quot;[25C1F-2EB]&quot;,&quot;index&quot;:2},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([0967A-DA3])&quot;,&quot;context&quot;:{&quot;[0967A-DA3]&quot;:{&quot;dim&quot;:&quot;[v_user_course.in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;In Progress&quot;}},&quot;title&quot;:&quot;In Progress Modules&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:109},&quot;field&quot;:{&quot;id&quot;:&quot;sum([0967A-DA3])&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;sum([2D788-890])&quot;,&quot;context&quot;:{&quot;[2D788-890]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;title&quot;:&quot;Completed&quot;}},&quot;title&quot;:&quot;Total Modules Completed&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:124},&quot;field&quot;:{&quot;id&quot;:&quot;sum([2D788-890])&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[3B73C-7C3]/[9708D-7DD]&quot;,&quot;context&quot;:{&quot;[9708D-7DD]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[3B73C-7C3]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Modules Completions %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:122},&quot;field&quot;:{&quot;id&quot;:&quot;[3B73C-7C3]/[9708D-7DD]&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[80287-BFF]/[3D68E-C49]&quot;,&quot;context&quot;:{&quot;[1AF1A-5F9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[3D68E-C49]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[80287-BFF]&quot;:{&quot;dim&quot;:&quot;[v_user_course.in_progress]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total in_progress&quot;}},&quot;title&quot;:&quot;In Progress Modules %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;[80287-BFF]/[3D68E-C49]&quot;,&quot;index&quot;:6},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;SUM([90D67-E09],IF([8B51B-609]/[23A9E-C9F]&gt;=0.95,1,0))\n&quot;,&quot;context&quot;:{&quot;[5FC53-2CD]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[23A9E-C9F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[8B51B-609]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;},&quot;[90D67-E09]&quot;:{&quot;dim&quot;:&quot;[v_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;location_id&quot;}},&quot;title&quot;:&quot;95-100%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;SUM([90D67-E09],IF([8B51B-609]/[23A9E-C9F]&gt;=0.95,1,0))\n&quot;,&quot;index&quot;:7},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;   SUM([location_id],\n       CASE WHEN [9C03C-529]/[90E28-30F]&lt;0.90 AND [9C03C-529]/[90E28-30F]&gt;=0.85 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;context&quot;:{&quot;[62421-FC4]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[90E28-30F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[9C03C-529]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;85-89.9%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;   SUM([location_id],\n       CASE WHEN [9C03C-529]/[90E28-30F]&lt;0.90 AND [9C03C-529]/[90E28-30F]&gt;=0.85 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;index&quot;:8},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;   SUM([location_id],\n       CASE WHEN [29880-87E]/[819B5-C4A]&lt;0.95 AND [29880-87E]/[819B5-C4A]&gt;=0.90 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;context&quot;:{&quot;[819B5-C4A]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[29880-87E]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;90-94.9%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;   SUM([location_id],\n       CASE WHEN [29880-87E]/[819B5-C4A]&lt;0.95 AND [29880-87E]/[819B5-C4A]&gt;=0.90 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;   SUM([location_id],\n       CASE WHEN [2B5BF-9A5]/[32953-69F]&lt;0.85 AND [2B5BF-9A5]/[32953-69F]&gt;=0.80 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;context&quot;:{&quot;[0880A-E7F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[32953-69F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[2B5BF-9A5]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;80-84.9%&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;   SUM([location_id],\n       CASE WHEN [2B5BF-9A5]/[32953-69F]&lt;0.85 AND [2B5BF-9A5]/[32953-69F]&gt;=0.80 THEN 1 \n       ELSE 0 \n       END)\n   &quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;SUM([location_id],if([23A52-9CC]/[FFD4A-8D9]&lt;0.8,1,0))&quot;,&quot;context&quot;:{&quot;[C7E2D-8EE]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[FFD4A-8D9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[23A52-9CC]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;79.9% and below&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;SUM([location_id],if([23A52-9CC]/[FFD4A-8D9]&lt;0.8,1,0))&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Role&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;Franchises&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8f45508c5e619b0416ded;&quot;,&quot;dashboard&quot;:&quot;5ac8f45508c5e619b0416de6;ModuleFranchise&quot;,&quot;queryGuid&quot;:&quot;73B40-CCF2-F2F8-D7F9-6E0D-FCA8-3972-7F9E-0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Detailed Module Module Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;datasource&quot;:{&quot;id&quot;:&quot;Module(LocalHost)&quot;,&quot;title&quot;:&quot;Module&quot;,&quot;address&quot;:&quot;LocalHost&quot;,&quot;database&quot;:&quot;aModule&quot;,&quot;fullname&quot;:&quot;LocalHost/Module&quot;},&quot;format&quot;:&quot;pivot&quot;,&quot;count&quot;:25,&quot;offset&quot;:0,&quot;grandTotals&quot;:{&quot;rows&quot;:true},&quot;metadata&quot;:[{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Franchises&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;index&quot;:0},&quot;panel&quot;:&quot;rows&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;count([B3A65-80F])&quot;,&quot;context&quot;:{&quot;[B3A65-80F]&quot;:{&quot;dim&quot;:&quot;[v_location.location_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Location Id&quot;}},&quot;title&quot;:&quot;Restaurants&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;}},&quot;field&quot;:{&quot;id&quot;:&quot;count([B3A65-80F])&quot;,&quot;index&quot;:1},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([6DBDD-BF6])&quot;,&quot;context&quot;:{&quot;[6DBDD-BF6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;}},&quot;title&quot;:&quot;Total Required Modules&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;type&quot;:&quot;number&quot;,&quot;t&quot;:true,&quot;b&quot;:true,&quot;separated&quot;:true,&quot;decimals&quot;:&quot;auto&quot;,&quot;isdefault&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:122},&quot;field&quot;:{&quot;id&quot;:&quot;([6DBDD-BF6])&quot;,&quot;index&quot;:2},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;[A985A-5F2]/[95749-9EE]&quot;,&quot;context&quot;:{&quot;[D197F-945]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;count&quot;,&quot;title&quot;:&quot;# of unique program_course_id&quot;},&quot;[95749-9EE]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[A985A-5F2]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Modules Completions %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:131},&quot;field&quot;:{&quot;id&quot;:&quot;[A985A-5F2]/[95749-9EE]&quot;,&quot;index&quot;:3},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([E4600-34C],[B5D34-DDF])/([37E41-65D],[B5D34-DDF])&quot;,&quot;context&quot;:{&quot;[37E41-65D]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[9D170-8AE]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[B5D34-DDF]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_1&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[E4600-34C]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Basics %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:99},&quot;field&quot;:{&quot;id&quot;:&quot;([E4600-34C],[B5D34-DDF])/([37E41-65D],[B5D34-DDF])&quot;,&quot;index&quot;:4},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([7C46D-8FC],[79D5E-176])/([93A8E-537],[79D5E-176])\n&quot;,&quot;context&quot;:{&quot;[93A8E-537]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[97709-35B]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[79D5E-176]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_2&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[7C46D-8FC]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Preparing Product %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:117},&quot;field&quot;:{&quot;id&quot;:&quot;([7C46D-8FC],[79D5E-176])/([93A8E-537],[79D5E-176])\n&quot;,&quot;index&quot;:5},&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([F384A-2D9],[5ECB1-3D6])/([40075-9EE],[5ECB1-3D6])\n&quot;,&quot;context&quot;:{&quot;[40075-9EE]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[3D894-596]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_4&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[5ECB1-3D6]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_3&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[F384A-2D9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Building Products %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:126},&quot;field&quot;:{&quot;id&quot;:&quot;([F384A-2D9],[5ECB1-3D6])/([40075-9EE],[5ECB1-3D6])\n&quot;,&quot;index&quot;:6},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([37A6D-219],[D4B62-BCA])/([679DA-5EF],[D4B62-BCA])\n&quot;,&quot;context&quot;:{&quot;[679DA-5EF]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[16591-2A0]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[D4B62-BCA]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_4&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[37A6D-219]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Cleanliness %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:121},&quot;field&quot;:{&quot;id&quot;:&quot;([37A6D-219],[D4B62-BCA])/([679DA-5EF],[D4B62-BCA])\n&quot;,&quot;index&quot;:7},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([3F352-A3A],[D00D3-E70])/([E1137-37F],[D00D3-E70])\n&quot;,&quot;context&quot;:{&quot;[E1137-37F]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[782EC-0FC]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[D00D3-E70]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.STAGE_5&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[3F352-A3A]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Completed Operational Excellence %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:103},&quot;field&quot;:{&quot;id&quot;:&quot;([3F352-A3A],[D00D3-E70])/([E1137-37F],[D00D3-E70])\n&quot;,&quot;index&quot;:8},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([5259F-41E],[D7225-D86],[649ED-E78])/([E7FE0-286],[D7225-D86],[649ED-E78])&quot;,&quot;context&quot;:{&quot;[E7FE0-286]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[D7225-D86]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.RM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[32664-C8B]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[649ED-E78]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.BASIC&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[5259F-41E]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Foundations Basics completed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:123},&quot;field&quot;:{&quot;id&quot;:&quot;([5259F-41E],[D7225-D86],[649ED-E78])/([E7FE0-286],[D7225-D86],[649ED-E78])&quot;,&quot;index&quot;:9},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([7A960-8E6],[4627F-F0D],[8CC6D-96D])/([35F95-2A6],[4627F-F0D],[8CC6D-96D])&quot;,&quot;context&quot;:{&quot;[35F95-2A6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[4627F-F0D]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.RM_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[FE89B-6C2]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[8CC6D-96D]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.topic_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookTopic.name.SH_CTRL&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;topic_name_text_cd&quot;},&quot;[7A960-8E6]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Foundations Shift Control completed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:121},&quot;field&quot;:{&quot;id&quot;:&quot;([7A960-8E6],[4627F-F0D],[8CC6D-96D])/([35F95-2A6],[4627F-F0D],[8CC6D-96D])&quot;,&quot;index&quot;:10},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;type&quot;:&quot;measure&quot;,&quot;formula&quot;:&quot;([AC507-F01],[50854-75F])/([B45F1-4C9],[50854-75F])&quot;,&quot;context&quot;:{&quot;[B45F1-4C9]&quot;:{&quot;dim&quot;:&quot;[v_user_course.program_course_id]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;countduplicates&quot;,&quot;title&quot;:&quot;# of program_course_id&quot;},&quot;[34C1B-D85]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[50854-75F]&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.program_name_text_cd]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;LookProgram.name.BK_USER_TRAINING&quot;]},&quot;collapsed&quot;:false,&quot;title&quot;:&quot;program_name_text_cd&quot;},&quot;[AC507-F01]&quot;:{&quot;dim&quot;:&quot;[v_user_course.completed]&quot;,&quot;datatype&quot;:&quot;numeric&quot;,&quot;agg&quot;:&quot;sum&quot;,&quot;title&quot;:&quot;Total completed&quot;}},&quot;title&quot;:&quot;Regional Modules completed %&quot;},&quot;format&quot;:{&quot;mask&quot;:{&quot;decimals&quot;:1,&quot;percent&quot;:true},&quot;color&quot;:{&quot;type&quot;:&quot;color&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;width&quot;:142},&quot;field&quot;:{&quot;id&quot;:&quot;([AC507-F01],[50854-75F])/([B45F1-4C9],[50854-75F])&quot;,&quot;index&quot;:11},&quot;disabled&quot;:false,&quot;panel&quot;:&quot;measures&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_course.course_added_datetime (Calendar)]&quot;,&quot;datatype&quot;:&quot;datetime&quot;,&quot;merged&quot;:true,&quot;title&quot;:&quot;Date Range&quot;,&quot;level&quot;:&quot;days&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;last&quot;:{&quot;count&quot;:30,&quot;offset&quot;:0}}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_program]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Program&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_topic]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;panel&quot;:&quot;scope&quot;,&quot;title&quot;:&quot;Select Stage&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_lang_text_course.text_value_course]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Module&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:true,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.role_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Select Role&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.new_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;New Training Users&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.front_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Front of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.back_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Back of House User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.porter_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Porter User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_user_data.breakfast_value]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;merged&quot;:true,&quot;collapsed&quot;:true,&quot;title&quot;:&quot;Include Breakfast User Attribute&quot;,&quot;filter&quot;:{&quot;explicit&quot;:false,&quot;multiSelection&quot;:true,&quot;all&quot;:true}},&quot;disabled&quot;:false,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;},{&quot;jaql&quot;:{&quot;dim&quot;:&quot;[v_dag_location.level5_fran]&quot;,&quot;datatype&quot;:&quot;text&quot;,&quot;collapsed&quot;:true,&quot;filter&quot;:{&quot;explicit&quot;:true,&quot;multiSelection&quot;:true,&quot;members&quot;:[&quot;Franchise&quot;]},&quot;title&quot;:&quot;Franchises&quot;},&quot;locked&quot;:true,&quot;isCascading&quot;:false,&quot;panel&quot;:&quot;scope&quot;}],&quot;isMaskedResult&quot;:true,&quot;widget&quot;:&quot;5ac8f45508c5e619b0416dee;&quot;,&quot;dashboard&quot;:&quot;5ac8f45508c5e619b0416de6;ModuleFranchise&quot;,&quot;queryGuid&quot;:&quot;2831A-A1C6-BE14-6119-D2B9-2F45-C668-48C1-B&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/datasources/Module/jaql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SIGNOUT" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stage.bklinkglobal.com/login/#/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">login/#/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://stage.bklinkglobal.com/reports/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">28523</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stage.bklinkglobal.com/public/service/config" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">public/service/config</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://stage.bklinkglobal.com/login/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">891</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stage.bklinkglobal.com/fw-ui/assets/i18n/en.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">fw-ui/assets/i18n/en.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://stage.bklinkglobal.com/login/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stage.bklinkglobal.com/fw-user/assets/i18n/en.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">fw-user/assets/i18n/en.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://stage.bklinkglobal.com/login/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stage.bklinkglobal.com/fw-policies/assets/i18n/en.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">fw-policies/assets/i18n/en.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://stage.bklinkglobal.com/login/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stage.bklinkglobal.com/navigation/assets/i18n/en.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">navigation/assets/i18n/en.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://stage.bklinkglobal.com/login/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stage.bklinkglobal.com/login/assets/i18n/en.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">login/assets/i18n/en.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://stage.bklinkglobal.com/login/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stage.bklinkglobal.com/svc/public/service/i18n/UI/?_l=en" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">svc/public/service/i18n/UI/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en,en;q=0.1</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://stage.bklinkglobal.com/login/</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${gaussianTimerDelay}</stringProp>
            <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Signout" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/views/ux-controls/menu.html?v=998f36c280315f7d4041d8c4d090fa54" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">998f36c280315f7d4041d8c4d090fa54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">views/ux-controls/menu.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ec.walkme.com/event/postEvent" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="{&quot;_static&quot;:true,&quot;Wm-Client-Timestamp&quot;:1528320445634}&#xa;{&quot;time&quot;:1528320445337,&quot;sId&quot;:&quot;91087659-4e8c-b1bb-e737-77908102741d&quot;,&quot;pgId&quot;:&quot;-1&quot;,&quot;type&quot;:&quot;play&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;trackedElementsSet&quot;,&quot;oId&quot;:1226,&quot;oName&quot;:&quot;Dashboards&quot;,&quot;pId&quot;:&quot;1226_e3d9e763975a926c23534a40b48a784b&quot;,&quot;pluginVer&quot;:&quot;1.8.0&quot;,&quot;libVer&quot;:&quot;3444&quot;},&quot;env&quot;:{&quot;browser&quot;:{&quot;name&quot;:&quot;Chrome&quot;,&quot;version&quot;:&quot;67.0.3396.79&quot;,&quot;string&quot;:&quot;Chrome 67.0.3396.79&quot;},&quot;os&quot;:{&quot;name&quot;:&quot;Windows&quot;},&quot;mobile&quot;:false,&quot;url&quot;:&quot;https://sisense-rbi-stage.alchemy-eng.com/app/main#/dashboards/5abbbcc0f8884e1d74a9fe49&quot;,&quot;urlWithoutQueryString&quot;:&quot;https://sisense-rbi-stage.alchemy-eng.com/app/main&quot;,&quot;pageTitle&quot;:&quot;LogCompany - Sisense&quot;},&quot;wm&quot;:{&quot;uId&quot;:&quot;722079e7f51e44d9a485dd8bed947087&quot;,&quot;euId&quot;:&quot;17057@BK.idp.alchemysystems.com&quot;,&quot;euIdSource&quot;:&quot;Identifier&quot;,&quot;permId&quot;:-1,&quot;language&quot;:&quot;&quot;,&quot;cVars&quot;:[],&quot;env&quot;:0,&quot;interactionGuid&quot;:null,&quot;platform&quot;:1,&quot;userVars&quot;:{&quot;name&quot;:&quot;6.7.1.15016&quot;,&quot;role&quot;:&quot;consumer&quot;,&quot;type&quot;:false}}}&#xa;{&quot;time&quot;:1528320445338,&quot;sId&quot;:&quot;91087659-4e8c-b1bb-e737-77908102741d&quot;,&quot;pgId&quot;:&quot;-1&quot;,&quot;type&quot;:&quot;play&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;trackedElementsSet&quot;,&quot;oId&quot;:1230,&quot;oName&quot;:&quot;Home " elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">{&quot;_static&quot;:true,&quot;Wm-Client-Timestamp&quot;:1528320445634}
{&quot;time&quot;:1528320445337,&quot;sId&quot;:&quot;91087659-4e8c-b1bb-e737-77908102741d&quot;,&quot;pgId&quot;:&quot;-1&quot;,&quot;type&quot;:&quot;play&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;trackedElementsSet&quot;,&quot;oId&quot;:1226,&quot;oName&quot;:&quot;Dashboards&quot;,&quot;pId&quot;:&quot;1226_e3d9e763975a926c23534a40b48a784b&quot;,&quot;pluginVer&quot;:&quot;1.8.0&quot;,&quot;libVer&quot;:&quot;3444&quot;},&quot;env&quot;:{&quot;browser&quot;:{&quot;name&quot;:&quot;Chrome&quot;,&quot;version&quot;:&quot;67.0.3396.79&quot;,&quot;string&quot;:&quot;Chrome 67.0.3396.79&quot;},&quot;os&quot;:{&quot;name&quot;:&quot;Windows&quot;},&quot;mobile&quot;:false,&quot;url&quot;:&quot;https://sisense-rbi-stage.alchemy-eng.com/app/main#/dashboards/5abbbcc0f8884e1d74a9fe49&quot;,&quot;urlWithoutQueryString&quot;:&quot;https://sisense-rbi-stage.alchemy-eng.com/app/main&quot;,&quot;pageTitle&quot;:&quot;LogCompany - Sisense&quot;},&quot;wm&quot;:{&quot;uId&quot;:&quot;722079e7f51e44d9a485dd8bed947087&quot;,&quot;euId&quot;:&quot;17057@BK.idp.alchemysystems.com&quot;,&quot;euIdSource&quot;:&quot;Identifier&quot;,&quot;permId&quot;:-1,&quot;language&quot;:&quot;&quot;,&quot;cVars&quot;:[],&quot;env&quot;:0,&quot;interactionGuid&quot;:null,&quot;platform&quot;:1,&quot;userVars&quot;:{&quot;name&quot;:&quot;6.7.1.15016&quot;,&quot;role&quot;:&quot;consumer&quot;,&quot;type&quot;:false}}}
{&quot;time&quot;:1528320445338,&quot;sId&quot;:&quot;91087659-4e8c-b1bb-e737-77908102741d&quot;,&quot;pgId&quot;:&quot;-1&quot;,&quot;type&quot;:&quot;play&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;trackedElementsSet&quot;,&quot;oId&quot;:1230,&quot;oName&quot;:&quot;Home </stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name=" Dashboards&quot;,&quot;pId&quot;:&quot;1230_e3d9e763975a926c23534a40b48a784b&quot;,&quot;pluginVer&quot;:&quot;1.8.0&quot;,&quot;libVer&quot;:&quot;3444&quot;},&quot;env&quot;:{&quot;browser&quot;:{&quot;name&quot;:&quot;Chrome&quot;,&quot;version&quot;:&quot;67.0.3396.79&quot;,&quot;string&quot;:&quot;Chrome 67.0.3396.79&quot;},&quot;os&quot;:{&quot;name&quot;:&quot;Windows&quot;},&quot;mobile&quot;:false,&quot;url&quot;:&quot;https://sisense-rbi-stage.alchemy-eng.com/app/main#/dashboards/5abbbcc0f8884e1d74a9fe49&quot;,&quot;urlWithoutQueryString&quot;:&quot;https://sisense-rbi-stage.alchemy-eng.com/app/main&quot;,&quot;pageTitle&quot;:&quot;LogCompany - Sisense&quot;},&quot;wm&quot;:{&quot;uId&quot;:&quot;722079e7f51e44d9a485dd8bed947087&quot;,&quot;euId&quot;:&quot;17057@BK.idp.alchemysystems.com&quot;,&quot;euIdSource&quot;:&quot;Identifier&quot;,&quot;permId&quot;:-1,&quot;language&quot;:&quot;&quot;,&quot;cVars&quot;:[],&quot;env&quot;:0,&quot;interactionGuid&quot;:null,&quot;platform&quot;:1,&quot;userVars&quot;:{&quot;name&quot;:&quot;6.7.1.15016&quot;,&quot;role&quot;:&quot;consumer&quot;,&quot;type&quot;:false}}}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name"> Dashboards&quot;,&quot;pId&quot;:&quot;1230_e3d9e763975a926c23534a40b48a784b&quot;,&quot;pluginVer&quot;:&quot;1.8.0&quot;,&quot;libVer&quot;:&quot;3444&quot;},&quot;env&quot;:{&quot;browser&quot;:{&quot;name&quot;:&quot;Chrome&quot;,&quot;version&quot;:&quot;67.0.3396.79&quot;,&quot;string&quot;:&quot;Chrome 67.0.3396.79&quot;},&quot;os&quot;:{&quot;name&quot;:&quot;Windows&quot;},&quot;mobile&quot;:false,&quot;url&quot;:&quot;https://sisense-rbi-stage.alchemy-eng.com/app/main#/dashboards/5abbbcc0f8884e1d74a9fe49&quot;,&quot;urlWithoutQueryString&quot;:&quot;https://sisense-rbi-stage.alchemy-eng.com/app/main&quot;,&quot;pageTitle&quot;:&quot;LogCompany - Sisense&quot;},&quot;wm&quot;:{&quot;uId&quot;:&quot;722079e7f51e44d9a485dd8bed947087&quot;,&quot;euId&quot;:&quot;17057@BK.idp.alchemysystems.com&quot;,&quot;euIdSource&quot;:&quot;Identifier&quot;,&quot;permId&quot;:-1,&quot;language&quot;:&quot;&quot;,&quot;cVars&quot;:[],&quot;env&quot;:0,&quot;interactionGuid&quot;:null,&quot;platform&quot;:1,&quot;userVars&quot;:{&quot;name&quot;:&quot;6.7.1.15016&quot;,&quot;role&quot;:&quot;consumer&quot;,&quot;type&quot;:false}}}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">event/postEvent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/auth/logout" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/auth/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">835</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/app/account#/login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">app/account#/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/main</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">106</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/v1/settings/public_settings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/settings/public_settings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1069</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/views/account/window-desktop.html?v=998f36c280315f7d4041d8c4d090fa54" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">998f36c280315f7d4041d8c4d090fa54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">views/account/window-desktop.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/views/extplugins-manager/extpluginsManagerDirective.html?v=998f36c280315f7d4041d8c4d090fa54" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">998f36c280315f7d4041d8c4d090fa54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">views/extplugins-manager/extpluginsManagerDirective.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/extplugins/config?v=998f36c280315f7d4041d8c4d090fa54" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">998f36c280315f7d4041d8c4d090fa54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/extplugins/config</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/views/account/login-header-desktop.html?v=998f36c280315f7d4041d8c4d090fa54" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">998f36c280315f7d4041d8c4d090fa54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">views/account/login-header-desktop.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/views/account/login-body-desktop.html?v=998f36c280315f7d4041d8c4d090fa54" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">998f36c280315f7d4041d8c4d090fa54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">views/account/login-body-desktop.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/views/extplugins-manager/walkMe.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">views/extplugins-manager/walkMe.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://sisense-rbi-stage.alchemy-eng.com/api/v1/translations/en" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/translations/en</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://sisense-rbi-stage.alchemy-eng.com/app/account</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">49</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
